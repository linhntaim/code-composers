{"version":3,"sources":["../../src/pug/pug-composer.js"],"names":["SPACE_4","SPACE_2","SPACE_TAB","EOL_WINDOWS","EOL_UNIX","EOL_MAC","PugComposer","space","eol","lines","content","traverseNode","parse5","parse","join","node","level","previousNode","nextNode","nodeName","traverseChildNodes","printDocumentTypeNode","printTextNode","printCommentNode","printTagNode","childNodes","forEach","childNode","index","length","push","printDocumentTypeLine","printSpace","printDocumentType","name","publicId","systemId","filter","item","trim","value","printTextNodeLine","line","printCommentNodeLine","printTagNodeLine","trimSpaceLeft","trimSpaceRight","printText","map","text","printComment","printTag","repeat","replace","split","comment","tagName","id","classes","attributes","attrs","attribute","classesString","printAttribute","Composer"],"mappings":"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","sourcesContent":["import {Composer} from '../composer'\r\nimport parse5 from 'parse5'\r\n\r\nexport const SPACE_4 = '    '\r\nexport const SPACE_2 = '  '\r\nexport const SPACE_TAB = '\\t'\r\nexport const EOL_WINDOWS = '\\r\\n'\r\nexport const EOL_UNIX = '\\n'\r\nexport const EOL_MAC = '\\r'\r\n\r\nexport class PugComposer extends Composer {\r\n    constructor(space = SPACE_4, eol = EOL_WINDOWS) {\r\n        super()\r\n\r\n        this.space = space\r\n        this.eol = eol\r\n        this.lines = []\r\n    }\r\n\r\n    compose(content) {\r\n        this.lines = []\r\n        this.traverseNode(parse5.parse(content))\r\n        return this.lines.join(this.eol)\r\n    }\r\n\r\n    traverseNode(node, level = 0, previousNode = null, nextNode = null) {\r\n        switch (node.nodeName) {\r\n            case '#document':\r\n            case '#document-fragment':\r\n                this.traverseChildNodes(node, level - 1)\r\n                break\r\n            case '#documentType':\r\n                this.printDocumentTypeNode(node, level)\r\n                break\r\n            case '#text':\r\n                this.printTextNode(node, level, previousNode, nextNode)\r\n                break\r\n            case '#comment':\r\n                this.printCommentNode(node, level)\r\n                break\r\n            default:\r\n                this.printTagNode(node, level)\r\n                    .traverseChildNodes(node, level)\r\n        }\r\n        return this\r\n    }\r\n\r\n    traverseChildNodes(node, level) {\r\n        node.childNodes.forEach((childNode, index) => this.traverseNode(\r\n            childNode,\r\n            level + 1,\r\n            index ? node.childNodes[index - 1] : null,\r\n            index < node.childNodes.length - 1 ? node.childNodes[index + 1] : null,\r\n        ))\r\n        return this\r\n    }\r\n\r\n    printDocumentTypeNode(node, level) {\r\n        this.lines.push(this.printDocumentTypeLine(node, level))\r\n        return this\r\n    }\r\n\r\n    printDocumentTypeLine(node, level) {\r\n        return this.printSpace(level) + this.printDocumentType(node)\r\n    }\r\n\r\n    printDocumentType(node) {\r\n        return [\r\n            'doctype',\r\n            node.name,\r\n            node.publicId ? 'PUBLIC' : '',\r\n            node.publicId,\r\n            node.systemId,\r\n        ].filter(item => !!item.trim()).join(' ')\r\n    }\r\n\r\n    printTextNode(node, level, previousNode = null, nextNode = null) {\r\n        if (node.value.trim() === ''\r\n            && (\r\n                (previousNode && 'tagName' in previousNode\r\n                    && nextNode && 'tagName' in nextNode)\r\n                || (previousNode && 'tagName' in previousNode\r\n                    && !nextNode)\r\n                || (!previousNode\r\n                    && nextNode && 'tagName' in nextNode)\r\n            )\r\n        ) {\r\n            return this\r\n        }\r\n        this.printTextNodeLine(\r\n            node,\r\n            level,\r\n            !previousNode || !('tagName' in previousNode),\r\n            !nextNode || !('tagName' in nextNode),\r\n        ).forEach(line => this.lines.push(line))\r\n        return this\r\n    }\r\n\r\n    printCommentNode(node, level) {\r\n        this.printCommentNodeLine(node, level).forEach(line => this.lines.push(line))\r\n        return this\r\n    }\r\n\r\n    printTagNode(node, level) {\r\n        this.lines.push(\r\n            this.printTagNodeLine(node, level),\r\n        )\r\n        return this\r\n    }\r\n\r\n    printTextNodeLine(node, level, trimSpaceLeft = false, trimSpaceRight = false) {\r\n        return this.printText(node, trimSpaceLeft, trimSpaceRight).map(text => this.printSpace(level) + text)\r\n    }\r\n\r\n    printCommentNodeLine(node, level) {\r\n        return this.printComment(node).map(text => this.printSpace(level) + text)\r\n    }\r\n\r\n    printTagNodeLine(node, level) {\r\n        return this.printSpace(level) + this.printTag(node)\r\n    }\r\n\r\n    printSpace(level) {\r\n        return this.space.repeat(level)\r\n    }\r\n\r\n    printText(node, trimSpaceLeft = true, trimSpaceRight = true) {\r\n        return (text => {\r\n            if (trimSpaceLeft && trimSpaceRight) {\r\n                text = text.trim()\r\n            } else if (trimSpaceLeft) {\r\n                text = text.replace(/^\\s+/, '')\r\n            } else if (trimSpaceRight) {\r\n                text = text.replace(/\\s+$/, '')\r\n            }\r\n            return text\r\n        })(node.value).split(/\\r*\\n|\\r/).map(text => {\r\n            return '| ' + text\r\n        })\r\n    }\r\n\r\n    printComment(node) {\r\n        return node.value.trim().split(/\\r*\\n|\\r/).map(comment => '// ' + comment.trim())\r\n    }\r\n\r\n    printTag(node) {\r\n        let name = node.tagName\r\n        let id = ''\r\n        let classes = []\r\n        let attributes = []\r\n        node.attrs.forEach(attribute => {\r\n            switch (attribute.name) {\r\n                case 'id':\r\n                    id = '#' + attribute.value.trim()\r\n                    break\r\n                case 'class':\r\n                    (classesString => {\r\n                        if (classesString !== '') {\r\n                            classes.push(...classesString.split(/\\s+/))\r\n                        }\r\n                    })(attribute.value.trim())\r\n                    break\r\n                default:\r\n                    attributes.push(this.printAttribute(attribute))\r\n                    break\r\n            }\r\n        })\r\n        if (name === 'div' && (id || classes.length)) {\r\n            name = ''\r\n        }\r\n        return [\r\n            name,\r\n            id,\r\n            classes.length ? '.' + classes.join('.') : '',\r\n            attributes.length ? '(' + attributes.join(' ') + ')' : '',\r\n        ].join('')\r\n    }\r\n\r\n    printAttribute(attribute) {\r\n        return attribute.name + '=\"' + attribute.value + '\"'\r\n    }\r\n\r\n    composedFileExtension() {\r\n        return 'pug'\r\n    }\r\n}"],"file":"pug-composer.js"}